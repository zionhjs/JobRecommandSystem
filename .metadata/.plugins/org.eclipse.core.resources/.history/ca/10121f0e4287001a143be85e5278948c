package external;

import java.util.ArrayList;
import java.util.List;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import com.monkeylearn.ExtraParam;
import com.monkeylearn.MonkeyLearn;
import com.monkeylearn.MonkeyLearnResponse;
import com.monkeylearn.MonkeyLearnException;

public class MonkeyLearnClient {
	private static final String API_KEY = "629c8cf9f2499cfbb1f0b1d005b982d6c065d04a";// make sure change it to your api key.
	
    public static void main( String[] args ) throws MonkeyLearnException {
        MonkeyLearn ml = new MonkeyLearn("629c8cf9f2499cfbb1f0b1d005b982d6c065d04a");
        String modelId = "ex_YCya9nrn";
        String[] data = {"Elon Musk has shared a photo of the spacesuit designed by SpaceX. This is the second image shared of the new design and the first to feature the spacesuit’s full-body look."};
        List<List<String>> words = extractKeywords(textList);
        System.out.println( res.arrayResult );
    }
    
    public static List<List<String>> extractKeywords(String[] text){
    	if(text == null || text.length == 0) {
    		return new ArrayList<>();
    	}
    	MonkeyLearn ml = new MonkeyLearn(API_KEY);
    	String modelId = "ex_YCya9nrn";
    	
		ExtraParam[] extraParams = { new ExtraParam("max_keywords", "3") };
		
		MonkeyLearnResponse response;
		try {
			response = ml.extractors.extract("YOUR_MODEL_ID", text, extraParams);
			JSONArray resultArray = response.arrayResult;
			return getKeywords(resultArray);
		} catch (MonkeyLearnException e) {// it’s likely to have an exception
			e.printStackTrace();
		}
		return new ArrayList<>();
    }
    
    private static List<List<String>> getKeywords(JSONArray mlResultArray) {
		List<List<String>> topKeywords = new ArrayList<>();
		// Iterate the result array and convert it to our format.
		for (int i = 0; i < mlResultArray.size(); ++i) {
			List<String> keywords = new ArrayList<>();
			JSONArray keywordsArray = (JSONArray) mlResultArray.get(i);
			for (int j = 0; j < keywordsArray.size(); ++j) {
				JSONObject keywordObject = (JSONObject) keywordsArray.get(j);
				// We just need the keyword, excluding other fields.
				String keyword = (String) keywordObject.get("keyword");
				keywords.add(keyword);
			}
			topKeywords.add(keywords);
		}
		return topKeywords;
	}

}